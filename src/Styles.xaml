<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="MyFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Grid Margin="3 2">
            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
            <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ShadowStyle">
    <Setter Property="Control.Foreground" Value="LightGray" />
  </Style>

  <Style TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Margin" Value="2"/>
    <Setter Property="FontFamily" Value="Verdana"/>
    <Setter Property="FontSize" Value="11px"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
    <Setter Property="Background" >
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
          <GradientStop Color="#FFFFD190" Offset="0.2"/>
          <GradientStop Color="Orange" Offset="0.85"/>
          <GradientStop Color="#FFFFD190" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Name="border" 
        				BorderThickness="1"
        				Padding="4,2" 
        				BorderBrush="DarkGray" 
        				CornerRadius="3" 
        				Background="{TemplateBinding Background}">
            <Grid >
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow" 
        					Style="{StaticResource ShadowStyle}">
                <ContentPresenter.RenderTransform>
                  <TranslateTransform X="1.0" Y="1.0" />
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
              <Setter Property="Foreground" Value="#FF4788c8" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" >
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                    <GradientStop Color="#FFFFD190" Offset="0.35"/>
                    <GradientStop Color="LightBlue" Offset="0.95"/>
                    <GradientStop Color="#FFFFD190" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="content" Property="RenderTransform" >
                <Setter.Value>
                  <TranslateTransform Y="1.0" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
              <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TextBox}">
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="BorderBrush" Value="Black"></Setter>
    <Setter Property="FontWeight" Value="Bold"></Setter>
    <Setter Property="FlowDirection" Value="LeftToRight"></Setter>
    <Setter Property="Background" >
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
          <GradientStop Color="#FFFFD190" Offset="0.2"/>
          <GradientStop Color="Orange" Offset="0.85"/>
          <GradientStop Color="#FFFFD190" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4,4,4,4">
            <ScrollViewer x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
              <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderThickness">
      <Setter.Value>
        <Thickness Bottom="2" Left="1" Right="1" Top="1"></Thickness>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsFocused" Value="True" >
        <Setter Property="Button.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="#FF1C67C7"></DropShadowEffect>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Button.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="#FF9DBADF"></DropShadowEffect>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="{x:Static SystemColors.ControlBrush}" Cursor="Hand">
            <BulletDecorator.Bullet>
              <Grid Height="16" Width="16">
                <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="Orange" Visibility="Hidden" />
              </Grid>
            </BulletDecorator.Bullet>
            <TextBlock Margin="3,1,0,0" Foreground="#FF3E3E3E" FontFamily="Calibri" FontSize="12">
       <ContentPresenter />
            </TextBlock>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
              <Setter TargetName="RadioOuter" Property="BorderBrush" Value="Orange" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="RadioMark" Property="Background" Value="lightGray" />
              <Setter TargetName="RadioOuter" Property="BorderBrush" Value="lightGray" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#EEE" Offset="0.0"/>
    <GradientStop Color="#CCC" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#CCC" Offset="0.0"/>
    <GradientStop Color="#444" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BackgroundBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="Orange" Offset="0.0"/>
    <GradientStop Color="RosyBrown" Offset="1.0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
  <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="Orange" Offset="0.0"/>
    <GradientStop Color="LightBlue" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="LightBlue" Offset="0.0"/>
    <GradientStop Color="#EEE" Offset="0.1"/>
    <GradientStop Color="Orange" Offset="0.9"/>
    <GradientStop Color="#FFF" Offset="1.0"/>
  </LinearGradientBrush>

  <ControlTemplate x:Key="newToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
    <Grid Background="{TemplateBinding Background}">
      <Rectangle x:Name="Rectangle"
                 Margin="0,0,0,0"
                 Fill="Transparent"
                 Stroke="{DynamicResource NormalBorderBrush}"/>
      <Path x:Name="Up_Arrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource GlyphBrush}"
            Data="M 0 0 L 4 4 L 8 0 Z"
                />
      <Path x:Name="Down_Arrow"
            Visibility="Collapsed"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource GlyphBrush}"
            Data="M 0 4 L 4 0 L 8 4 Z"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow"/>
        <Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="newExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*" x:Name="ContentRow"/>
            </Grid.RowDefinitions>
            <Border x:Name="Border"
                    Grid.Row="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2,2,0,0">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ToggleButton Template="{DynamicResource newToggleButtonControlTemplate}"
                              Background="{DynamicResource BackgroundBrush}"
                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"/>
                <ContentPresenter Grid.Column="1" Margin="4" RecognizesAccessKey="True" ContentSource="Header"/>
              </Grid>
            </Border>
            <Border x:Name="ExpandSite"
                    Grid.Row="1"
                    Visibility="Collapsed"
                    BorderThickness="1,0,1,1"
                    CornerRadius="0,0,2,2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Focusable="false" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>